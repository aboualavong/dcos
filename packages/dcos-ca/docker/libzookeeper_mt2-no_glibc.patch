diff -Nwrup ./src.old/c/src/zookeeper.c ./src/c/src/zookeeper.c
--- ./src.old/c/src/zookeeper.c	2016-06-07 13:16:38.597615716 +0000
+++ ./src/c/src/zookeeper.c	2016-06-07 13:17:11.067835709 +0000
@@ -697,66 +697,6 @@ struct sockaddr* zookeeper_get_connected
     return addr;
 }
 
-static void log_env() {
-  char buf[2048];
-#ifdef HAVE_SYS_UTSNAME_H
-  struct utsname utsname;
-#endif
-
-#if defined(HAVE_GETUID) && defined(HAVE_GETPWUID_R)
-  struct passwd pw;
-  struct passwd *pwp = NULL;
-  uid_t uid = 0;
-#endif
-
-  LOG_INFO(("Client environment:zookeeper.version=%s", PACKAGE_STRING));
-
-#ifdef HAVE_GETHOSTNAME
-  gethostname(buf, sizeof(buf));
-  LOG_INFO(("Client environment:host.name=%s", buf));
-#else
-  LOG_INFO(("Client environment:host.name=<not implemented>"));
-#endif
-
-#ifdef HAVE_SYS_UTSNAME_H
-  uname(&utsname);
-  LOG_INFO(("Client environment:os.name=%s", utsname.sysname));
-  LOG_INFO(("Client environment:os.arch=%s", utsname.release));
-  LOG_INFO(("Client environment:os.version=%s", utsname.version));
-#else
-  LOG_INFO(("Client environment:os.name=<not implemented>"));
-  LOG_INFO(("Client environment:os.arch=<not implemented>"));
-  LOG_INFO(("Client environment:os.version=<not implemented>"));
-#endif
-
-#ifdef HAVE_GETLOGIN
-  LOG_INFO(("Client environment:user.name=%s", getlogin()));
-#else
-  LOG_INFO(("Client environment:user.name=<not implemented>"));
-#endif
-
-#if defined(HAVE_GETUID) && defined(HAVE_GETPWUID_R)
-  uid = getuid();
-  if (!getpwuid_r(uid, &pw, buf, sizeof(buf), &pwp)) {
-    LOG_INFO(("Client environment:user.home=%s", pw.pw_dir));
-  } else {
-    LOG_INFO(("Client environment:user.home=<NA>"));
-  }
-#else
-  LOG_INFO(("Client environment:user.home=<not implemented>"));
-#endif
-
-#ifdef HAVE_GETCWD
-  if (!getcwd(buf, sizeof(buf))) {
-    LOG_INFO(("Client environment:user.dir=<toolong>"));
-  } else {
-    LOG_INFO(("Client environment:user.dir=%s", buf));
-  }
-#else
-  LOG_INFO(("Client environment:user.dir=<not implemented>"));
-#endif
-}
-
 /**
  * Create a zookeeper handle associated with the given host and port.
  */
@@ -767,7 +707,6 @@ zhandle_t *zookeeper_init(const char *ho
     zhandle_t *zh = NULL;
     char *index_chroot = NULL;
 
-    log_env();
 #ifdef WIN32
        if (Win32WSAStartup()){
                LOG_ERROR(("Error initializing ws2_32.dll"));
