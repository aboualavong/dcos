#!/usr/bin/env python

import logging
import os
import sys
import subprocess


from dcos_internal_utils import bootstrap
from dcos_internal_utils import exhibitor
from pkgpanda.actions import apply_service_configuration


from pkgpanda.actions import apply_service_configuration


log = logging.getLogger(__name__)


def main():
    if os.getuid() != 0:
        log.error('bootstrap must be run as root')
        sys.exit(1)

    opts = bootstrap.parse_args()

    logging.basicConfig(format='[%(levelname)s] %(message)s', level='INFO')
    log.setLevel(logging.DEBUG)

    log.info('Clearing proxy environment variables')
    os.environ.pop('HTTP_PROXY', None)
    os.environ.pop('http_proxy', None)
    os.environ.pop('HTTPS_PROXY', None)
    os.environ.pop('https_proxy', None)
    os.environ.pop('NO_PROXY', None)
    os.environ.pop('no_proxy', None)

    subprocess.check_call('/opt/mesosphere/bin/check-time')

    exhibitor.wait(opts.master_count)

    bootstrap.make_run_dirs(opts)

    b = bootstrap.Bootstrapper(opts)
    for service in opts.services:
        if service not in bootstrap.bootstrappers:
            log.error('Unknown service: {}'.format(service))
            sys.exit(1)
        log.debug('bootstrapping {}'.format(service))
        apply_service_configuration(service)
        bootstrap.bootstrappers[service](b, opts)


if __name__ == '__main__':
    main()
