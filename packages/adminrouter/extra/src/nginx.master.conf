include common/main.conf;


http {
    include common/http.conf;

    client_max_body_size 1024M;

    # Without this, cosocket-based code in worker
    # initialization cannot resolve leader.mesos.
    resolver 127.0.0.1:61053 valid=60s;

    upstream dcos_history_service {
        server leader.mesos:15055;
    }

    upstream mesos_dns {
        server 127.0.0.1:8123;
    }

    upstream exhibitor {
        server 127.0.0.1:8181;
    }

    upstream iam {
        server 127.0.0.1:8101;
    }

    upstream certificate_authority {
        server 127.0.0.1:8888;
    }

    upstream dddt {
        server unix:/run/dcos/3dt.sock;
    }

    upstream vault_default {
        server 127.0.0.1:8200;
    }

    upstream navstar {
        server 127.0.0.1:62080;
    }

    upstream metrics {
        server unix:/run/dcos/dcos-metrics-master.sock;
    }

    lua_shared_dict cache 100m;
    lua_shared_dict shmlocks 100k;
    lua_ssl_trusted_certificate /run/dcos/pki/CA/certs/ca.crt;
    lua_ssl_verify_depth 5;

    init_worker_by_lua '
        cache.periodically_refresh_cache()
    ';

    include /opt/mesosphere/etc/adminrouter-redirect-http-https.conf;

    server {
        server_name master.mesos leader.mesos;
        include common/server.conf;

        include /opt/mesosphere/etc/adminrouter-listen-ee.conf;
        include /opt/mesosphere/etc/adminrouter-upstreams.conf;

        root /opt/mesosphere/active/dcos-ui/usr;

        # ACS integration dev settings.
        #error_log logs/error.log notice;
        #rewrite_log on;
        #lua_code_cache off;

        # ---
        location ~ ^/acs/api/v1/auth/(login|logout|jwks|providers|oidc/callback|oidc/providers/?|saml/providers/?)$ {
            # Make the following IAM endpoints be freely accessible:
            # - /auth/login
            # - /auth/logout
            # - /auth/jwks
            # - /auth/providers
            # - /auth/oidc/providers(/)
            # - /auth/saml/providers(/)
            # - /auth/oidc/callback
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_pass http://iam;
        }

        location ~ ^/acs/api/v1/auth/saml/providers/[0-9a-zA-Z-]+/acs-callback$ {
            # Make the SAML ACS callback URL be freely accessible.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_pass http://iam;
        }

        location = /acs/acl-schema.json {
            access_by_lua_block {
                auth.access_aclschema_endpoint();
            }
            alias /opt/mesosphere/active/acl-schema/etc/acl-schema.json;
        }

        location ~ ^/acs/api/v1/users/(?<uid_path>.*)/permissions$ {
            access_by_lua '
                -- Note(JP): Authorize this resource on behalf of the IAM
                -- which does not yet implement an authorizer on its own.
                local object = "dcos:iam:users:" .. ngx.var.uid_path .. ":permissions"
                local action = "read"

                -- Deny access if request is not authenticated.
                local uid = auth.validate_jwt_or_exit(object, action)

                -- Allow request if user requests his/her own permissions
                -- or if requesting user has full access to the IAM.
                if uid ~= ngx.var.uid_path then
                    local triple = {
                        uid = uid,
                        rid = "dcos:adminrouter:acs",
                        action = "full"
                        }
                    auth.check_access_control_entry_or_exit(triple)
                else
                    local auditlogparms = {
                        uid = uid,
                        object = object,
                        action = action,
                        result = "allow",
                        reason = "user requests his/her own permissions"
                        }
                    auth.auditlog(auditlogparms)
                end
            ';
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_pass http://iam;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma no-cache;
            add_header Expires 0;
        }

        location /internal/acs/api/v1/internal/policyquery {
            # This endpoint answers if action <a> is allowed to be performed by
            # user <u> on resource <r>. <r>, <u>, <a> are transmitted via query
            # parameters. This location does not require authentication. It is
            # meant to serve only trusted (remote) ends. For now, keep it
            # only accessible by nginx' subrequests, via the 'internal' directive.
            # http://nginx.org/en/docs/http/ngx_http_core_module.html#internal
            internal;

            # Do not send original request headers upstream, see
            # https://github.com/openresty/lua-nginx-module#ngxlocationcapture
            proxy_pass_request_headers off;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            rewrite ^/internal/(.*) /$1 break;
            proxy_pass http://iam;
        }

        location /acs/api/v1 {
            access_by_lua_block {
                auth.access_acsapi_endpoint();
            }
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_pass http://iam;
            # Instruct user agent to not cache the response.
            # Ref: http://stackoverflow.com/a/2068407/145400
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma no-cache;
            add_header Expires 0;
        }

        # DC/OS root CA certificate (see DCOS-8752).
        # ---
        location = /ca/dcos-ca.crt {
            # Payload is encoded in the OpenSSL PEM format. nginx automatically
            # sends a `Content-Type: application/x-x509-ca-cert` header as of
            # the configuration in `mime.types`.
            alias /run/dcos/pki/CA/certs/ca.crt;
        }

        # Java KeyStore file with DC/OS Java's lib/security/cacerts (Java's
        # default CA cert bundle), plus DC/OS root CA certificate (see DCOS-8752).
        # The JKS file is password-protected with the default password 'changeme'.
        # ---
        location = /ca/cacerts.jks {
            # Make location emit JSK MIME type for all requests.
            types { }
            default_type application/x-java-keystore;
            alias /run/dcos/pki/CA/certs/cacerts.jks;
        }

        location = /ca/api/v2/info {
            proxy_set_header Host $http_host;
            proxy_pass http://certificate_authority;
        }

        location = /ca/api/v2/certificates {
            access_by_lua_block {
                auth.access_cacertificates_endpoint();
            }
            proxy_set_header Host $http_host;
            proxy_pass http://certificate_authority;
        }

        location ~ /ca/api/v2/(newcert|newkey|sign)$ {
            access_by_lua_block {
                auth.access_carw_endpoint();
            }
            proxy_set_header Host $http_host;
            proxy_pass http://certificate_authority;
        }

        location = /mesos {
            rewrite ^/mesos$ $scheme://$http_host/mesos/ permanent;
        }

        location /mesos/ {
            access_by_lua_block {
                auth.access_mesos_endpoint();
            }
            proxy_set_header Host $http_host;
            rewrite ^/mesos/(.*) /$1 break;
            proxy_pass $upstream_mesos;
        }

        location /package/ {
            access_by_lua_block {
                auth.access_package_endpoint();
            }

            proxy_pass $upstream_cosmos;

            # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_request_buffering
            proxy_request_buffering off;
            proxy_set_header Host $http_host;
            proxy_ssl_name 127.0.0.1;
            proxy_http_version 1.1;
        }

        location /capabilities {
            access_by_lua_block {
                auth.access_capabilities_endpoint();
            }

            proxy_pass $upstream_cosmos;

            proxy_set_header Host $http_host;
            proxy_ssl_name 127.0.0.1;
            proxy_http_version 1.1;
        }

        location /cosmos/service/ {
            access_by_lua_block {
                auth.access_cosmosservice_endpoint();
            }

            rewrite ^/cosmos/(.*) /$1 break;
            proxy_pass $upstream_cosmos;

            proxy_set_header Host $http_host;
            proxy_ssl_name 127.0.0.1;
            proxy_http_version 1.1;
        }

        location = /exhibitor {
            rewrite ^/exhibitor$ $scheme://$http_host/exhibitor/ permanent;
        }

        location = /exhibitor/exhibitor/v1/cluster/status {
            proxy_pass http://exhibitor;
            rewrite ^/exhibitor/(.*) /$1 break;
        }

        location /exhibitor/ {
            access_by_lua_block {
                auth.access_exhibitor_endpoint();
            }
            include common/proxy-headers.conf;

            # Exhibitor's web server may be configured to require basic authentication.
            # Replace original Authorization header: if the environment variable
            # EXHIBITOR_ADMIN_HTTPBASICAUTH_CREDS was provided, use its contents to
            # construct a basic auth header. Set the header value to an empty string
            # otherwise.
            set_by_lua $exhibitor_authorization_header '
                if EXHIBITOR_ADMIN_HTTPBASICAUTH_CREDS ~= nil then
                    return "Basic " .. EXHIBITOR_ADMIN_HTTPBASICAUTH_CREDS
                else
                    return ""
                end
            ';
            proxy_set_header Authorization $exhibitor_authorization_header;

            proxy_pass http://exhibitor/;
            proxy_redirect http://$http_host/ $scheme://$http_host/exhibitor/;
        }

        location /networking/api/v1/ {
            access_by_lua_block {
                auth.access_networkingapi_endpoint();
            }
            rewrite ^/networking/api/v1/(.*) /$1 break;
            proxy_set_header Host $http_host;
            proxy_pass $upstream_networking_api;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma no-cache;
            add_header Expires 0;
        }

        location /navstar/lashup/key {
            access_by_lua_block {
                auth.access_lashupkey_endpoint();
            }

            proxy_set_header Host $http_host;
            proxy_pass http://navstar/lashup/key;
        }

        location ~ ^/(slave|agent)/(?<agentid>[0-9a-zA-Z-]+)$ {
            # Append slash and perform internal redirect.
            rewrite ^/(slave|agent)/(.*)$ /agent/$2/ last;
        }

        location ~ ^/(slave|agent)/(?<agentid>[0-9a-zA-Z-]+)(?<url>.+)$ {
            access_by_lua_block {
                auth.access_agent_endpoint();
            }

            set $agentaddr '';
            set $agentport '';
            rewrite ^/(slave|agent)/[0-9a-zA-Z-]+/.*$ $url break;
            rewrite_by_lua_file conf/master/agent.lua;

            more_clear_input_headers Accept-Encoding;
            include common/proxy-headers.conf;
            # Enabling HTTP/1.1 does not matter for non-streaming endpoints as
            # we do not use backend connection pooling anyway.
            include common/http-11.conf;
            # Disabling all buffering here is OK, as Mesos Agent does not care
            # about it for non-streaming API endpoints while at the same time
            # stdin/stdout redirection to/from tasks requires it.
            include common/disable-request-response-buffering.conf;
            proxy_pass $agentaddr:$agentport;
        }

        location ~ ^/service/(?<serviceid>[0-9a-zA-Z-.]+)$ {
            # Append slash and 301-redirect.
            rewrite ^/service/(.*)$ /service/$1/ permanent;
        }

        location ~ ^/service/(?<serviceid>[0-9a-zA-Z-.]+)/(?<url>.*) {
            set $serviceurl '';
            set $servicescheme '';

            access_by_lua_block {
                auth.access_service_endpoint();
            }

            more_clear_input_headers Accept-Encoding;
            rewrite ^/service/[0-9a-zA-Z-.]+/?.*$ /$url break;
            rewrite_by_lua_file conf/master/service.lua;

            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass $serviceurl;
            proxy_redirect $servicescheme://$host/service/$serviceid/ /service/$serviceid/;
            proxy_redirect $servicescheme://$host/ /service/$serviceid/;
            proxy_redirect / /service/$serviceid/;

            # Disable buffering to allow real-time protocols
            proxy_buffering off;

            # Support web sockets and SPDY upgrades
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /metadata {
            access_by_lua_block {
                auth.access_metadata_endpoint();
            }
            content_by_lua_file conf/master/metadata.lua;
        }

        location /dcos-metadata/ui-config.json {
            # Allow non-authed access for the UI.
            alias /opt/mesosphere/etc/ui-config.json;
        }

        location /dcos-metadata/dcos-version.json {
            # Allow non-authed access for the UI.
            alias /opt/mesosphere/active/dcos-metadata/etc/dcos-version.json;
        }

        location /dcos-metadata/bootstrap-config.json {
            access_by_lua_block {
                auth.access_metadata_endpoint();
            }
            alias /opt/mesosphere/etc/bootstrap-config.json;
        }

        location /pkgpanda/active.buildinfo.full.json {
            access_by_lua_block {
                auth.access_metadata_endpoint();
            }
            add_header Cache-Control "no-cache";
            alias /opt/mesosphere/active.buildinfo.full.json;
        }

        location /dcos-history-service/ {
            access_by_lua_block {
                auth.access_historyservice_endpoint();
            }
            proxy_pass http://dcos_history_service/;
        }

        location = /mesos_dns {
            rewrite ^/mesos_dns$ $scheme://$http_host/mesos_dns/ permanent;
        }

        location /mesos_dns/ {
            access_by_lua_block {
                auth.access_mesosdns_endpoint();
            }
            proxy_set_header Host $http_host;
            proxy_pass http://mesos_dns/;
        }

        location /secrets/v1/ {
            access_by_lua_block {
                auth.access_secrets_endpoint();
            }

            proxy_set_header Host $http_host;
            proxy_pass $upstream_secrets;
            proxy_ssl_name 127.0.0.1;
        }

        location /vault/default/ {
            proxy_set_header Host $http_host;
            proxy_pass http://vault_default/;
        }

        location = /marathon {
            rewrite ^/marathon$ $scheme://$http_host/marathon/ last;
        }

        location /marathon/ {
            rewrite ^/marathon/(.*)$ /service/marathon/$1 last;
        }

        location /system/health/v1 {
            access_by_lua_block {
                auth.access_system_health_endpoint();
            }

            include common/proxy-headers.conf;
            proxy_pass http://dddt;
        }

        location /system/v1/logs/v1/ {
            access_by_lua_block {
                auth.access_system_logs_endpoint();
            }

            include common/http-11.conf;
            include common/proxy-headers.conf;
            proxy_pass_header X-Accel-Buffering;
            proxy_pass http://log/;
        }

        location /system/v1/metrics/ {
            access_by_lua_block {
                auth.access_system_metrics_endpoint();
            }

            include common/proxy-headers.conf;
            proxy_pass http://metrics/;
        }

        location ~ ^/system/v1/leader/mesos(?<url>.*)$ {
            access_by_lua_block {
                auth.access_system_mesosleader_endpoint();
            }

            include common/http-11.conf;
            include common/proxy-headers.conf;
            proxy_pass http://leader.mesos/system/v1$url$is_args$query_string;
        }

        location ~ ^/system/v1/leader/marathon(?<url>.*)$ {
            access_by_lua_block {
                auth.access_system_marathonleader_endpoint();
            }

            set $mleader_host '';
            rewrite_by_lua_file conf/master/marathon-leader.lua;

            include common/http-11.conf;
            include common/proxy-headers.conf;
            proxy_pass $mleader_host/system/v1$url$is_args$query_string;
        }

        location ~ ^/system/v1/agent/(?<agentid>[0-9a-zA-Z-]+)(?<type>(/logs/v1|/metrics/v0))(?<url>.*)$ {
            access_by_lua_block {
                auth.access_system_agent_endpoint();
            }

            set $agentaddr '';
            rewrite_by_lua_file conf/master/agent.lua;
            rewrite ^/agent/[0-9a-zA-Z-]+(.*)$ $1 break;

            more_clear_input_headers Accept-Encoding;
            include common/http-11.conf;
            include common/proxy-headers.conf;
            proxy_pass $agentaddr:$adminrouter_agent_port/system/v1$type$url$is_args$query_string;
        }
    }
}
