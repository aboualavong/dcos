package:
  - path: /etc/bouncer-config.json
    content: |
      {
        "SUPERUSER_PASSWORD_HASH": "{{ superuser_password_hash }}",
        "SUPERUSER_USERNAME": "{{ superuser_username }}",
        "LOG_LEVEL_STDERR": "INFO",
        "AUTH_COOKIE_SECURE_FLAG": {{ auth_cookie_secure_flag }},
        "EXPIRATION_AUTH_TOKEN_DAYS": 5,
        "EXPIRATION_AUTH_COOKIE_DAYS": 4.5,
        "EXPIRATION_INFO_COOKIE_DAYS": 4.5,
        "DATASTORE_ZK_BACKEND_HOSTS": "127.0.0.1:2181",
        "GUNICORN_WORKER_PROCESSES": 1,
        "GUNICORN_THREADS_PER_WORKER": 10,
        "GUNICORN_BIND_ADDRESS": "127.0.0.1:8101",
        "GUNICORN_WORKER_TIMEOUT_SECONDS": 10
      }
  - path: /etc/dcos-secrets.env
    content: |
      SECRETS_BOOTSTRAP={{ bootstrap_secrets }}
  - path: /etc_master/cosmos
    content: |
      TLS_ENABLED=true
      TLS_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      TLS_CERT_FILE=/run/dcos/pki/tls/certs/cosmos.crt
      TLS_KEY_FILE=/run/dcos/pki/tls/private/cosmos.key
      TLS_TRUSTSTORE=/run/dcos/pki/CA/certs/cacerts.jks
  - path: /etc/dcos-signal-extra.json
    content: |
      {
        "customer_key": "{{ customer_key }}",
        "diagnostics_urls": [
            "https://leader.mesos/system/health/v1/report"
          ],
          "cosmos_urls": [
            "https://leader.mesos/package/list"
          ],
          "mesos_urls": [
            "https://leader.mesos/mesos/frameworks",
            "https://leader.mesos/mesos/metrics/snapshot"
          ],`
        "ca_cert_path": "/run/dcos/pki/CA/certs/ca.crt"
      }
{% switch firewall_enabled %}
{% case "true" %}
  - path: /etc/mesos/master_firewall.json
    content: |
      {
        "disabled_endpoints" : {
          "paths" : [
              "/slaves",
              "/profiler/start",
              "/profiler/stop",
              "/registrar(1)/registry",
              "/api/v1",
              "/api/v1/scheduler",
              "/maintenance/schedule",
              "/maintenance/status",
              "/machine/down",
              "/machine/up"
          ]
        }
      }
{% case "false" %}
{% endswitch %}
  - path: /etc/mesos-master-extras
    content: |
{% switch mesos_authenticate_http %}
{% case "true" %}
      MESOS_HTTP_AUTHENTICATORS={{ mesos_http_authenticators }}
      MESOS_AUTHENTICATE_HTTP={{ mesos_authenticate_http }}
{% case "false" %}
{% endswitch %}
{% switch firewall_enabled %}
{% case "true" %}
      MESOS_FIREWALL_RULES=/opt/mesosphere/etc/mesos/master_firewall.json
{% case "false" %}
{% endswitch %}
      MESOS_AUTHORIZERS={{ mesos_master_authorizers }}
      # Always load authenticator, allow authentication.
      MESOS_AUTHENTICATORS={{ mesos_fwk_authenticators }}
      # Conditionally require authentication (reject unauthenticated).
      MESOS_AUTHENTICATE_FRAMEWORKS={{ mesos_authenticate_frameworks }}
      MESOS_AUTHENTICATE_AGENTS={{ mesos_authenticate_agents }}
      SSL_ENABLED={{ ssl_enabled }}
      SSL_SUPPORT_DOWNGRADE={{ ssl_support_downgrade }}
      SSL_VERIFY_CERT=false
      SSL_REQUIRE_CERT=false
      SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      SSL_CERT_FILE=/run/dcos/pki/tls/certs/mesos-master.crt
      SSL_KEY_FILE=/run/dcos/pki/tls/private/mesos-master.key
{% switch firewall_enabled %}
{% case "true" %}
  - path: /etc/mesos/slave_firewall.json
    content: |
      {
        "disabled_endpoints": {
          "paths": [
            "/profiler/start",
            "/profiler/stop",
            "/api/v1",
            "/api/v1/executor"
          ]
        }
      }
{% case "false" %}
{% endswitch %}
  - path: /etc/mesos/slave_principal.json
    content: |
      { "principal": "dcos_mesos_agent" }
  - path: /etc/mesos/public_slave_principal.json
    content: |
      { "principal": "dcos_mesos_agent_public" }
  - path: /etc/mesos-slave-common-extras
    content: |
      MESOS_ISOLATION={{ mesos_isolation }}
      MESOS_HOOKS={{ mesos_hooks }}
      SSL_ENABLED={{ ssl_enabled }}
      # TODO(adam-mesos): should be false in strict mode, but.. DCOS-8159
      SSL_SUPPORT_DOWNGRADE=true
      SSL_VERIFY_CERT=false
      SSL_REQUIRE_CERT=false
      SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
{% switch mesos_authenticate_http %}
{% case "true" %}
      MESOS_HTTP_AUTHENTICATORS={{ mesos_http_authenticators }}
      MESOS_AUTHENTICATE_HTTP={{ mesos_authenticate_http }}
{% case "false" %}
{% endswitch %}
{% switch firewall_enabled %}
{% case "true" %}
      MESOS_FIREWALL_RULES=/opt/mesosphere/etc/mesos/slave_firewall.json
{% case "false" %}
{% endswitch %}
      MESOS_AUTHORIZER={{ mesos_agent_authorizer }}
{% switch agent_authn_enabled %}
{% case "true" %}
      MESOS_AUTHENTICATEE=com_mesosphere_dcos_ClassicRPCAuthenticatee
      DCOS_SERVICE_ACCOUNT_CREDENTIAL=file:///run/dcos/etc/mesos/agent_service_account.json
{% case "false" %}
{% endswitch %}
  - path: /etc/mesos-slave-extras
    content: |
{% switch agent_authn_enabled %}
{% case "true" %}
      MESOS_CREDENTIAL=file:///opt/mesosphere/etc/mesos/slave_principal.json
{% case "false" %}
{% endswitch %}
      SSL_CERT_FILE=/run/dcos/pki/tls/certs/mesos-slave.crt
      SSL_KEY_FILE=/run/dcos/pki/tls/private/mesos-slave.key
  - path: /etc/mesos-slave-public-extras
    content: |
{% switch agent_authn_enabled %}
{% case "true" %}
      MESOS_CREDENTIAL=file:///opt/mesosphere/etc/mesos/public_slave_principal.json
{% case "false" %}
{% endswitch %}
      SSL_CERT_FILE=/run/dcos/pki/tls/certs/mesos-slave-public.crt
      SSL_KEY_FILE=/run/dcos/pki/tls/private/mesos-slave-public.key
  - path: /etc_master/marathon-extras
    content: |
      DCOS_SERVICE_ACCOUNT_CREDENTIAL=file:///run/dcos/etc/marathon/service_account.json
      MARATHON_EXTRA_ARGS={{ marathon_extra_args }}
      MESOS_AUTHENTICATEE=com_mesosphere_dcos_ClassicRPCAuthenticatee
      MESOS_MODULES=file:///opt/mesosphere/etc/mesos-scheduler-modules/dcos_authenticatee_module.json
      PLUGIN_ACS_URL=https://127.0.0.1
      PLUGIN_FRAMEWORK_TYPE=marathon
      SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      SSL_CERT_FILE=/run/dcos/pki/tls/certs/marathon.crt
      SSL_ENABLED={{ ssl_enabled }}
      SSL_SUPPORT_DOWNGRADE={{ ssl_support_downgrade }}
      SSL_KEY_FILE=/run/dcos/pki/tls/private/marathon.key
      SSL_KEYSTORE_PATH=/run/dcos/pki/tls/private/marathon.jks
      SSL_REQUIRE_CERT=false
      SSL_VERIFY_CERT=false
      TLS_TRUSTSTORE=/run/dcos/pki/CA/certs/cacerts.jks
  - path: /etc_master/zk_super_credentials
    permissions: "0600"
    content: |
      {{ zk_super_credentials }}
  - path: /etc_master/zk_master_credentials
    permissions: "0600"
    content: |
      {{ zk_master_credentials }}
  - path: /etc_master/zk_agent_digest
    permissions: "0600"
    content: |
      {{ zk_agent_digest }}
  - path: /etc_slave/zk_agent_credentials
    permissions: "0600"
    content: |
      {{ zk_agent_credentials }}
  - path: /etc_slave_public/zk_agent_credentials
    permissions: "0600"
    content: |
      {{ zk_agent_credentials }}
{% switch exhibitor_storage_backend %}
{% case "agent_only_group_no_exhibitor" %}
{% case "aws_s3" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "shared_filesystem" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "static" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "zookeeper" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "azure" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% endswitch %}
