package:
  - path: /etc/adminrouter-extras.env
    content: |
      ADMINROUTER_ACTIVATE_AUTH_MODULE=true
      DEFAULT_SCHEME={{ adminrouter_master_default_scheme }}
{% switch ssl_enabled %}
{% case "false" %}
      UPSTREAM_MESOS=http://leader.mesos:5050
      UPSTREAM_MARATHON=http://127.0.0.1:8080
{% case "true" %}
      UPSTREAM_MESOS=https://leader.mesos:5050
      UPSTREAM_MARATHON=https://127.0.0.1:8443
{% endswitch %}
  - path: /etc_master/adminrouter-redirect-http-https.conf
    content: |
{% switch adminrouter_master_enforce_https %}
{% case "all" %}
      server {
         listen 80;
         # Redirecting all HTTP requests to HTTPS as of
         # adminrouter_master_enforce_https == "all"
         return 307 https://$host$request_uri;
      }
{% case "none" %}
{% case "only_root_path" %}
{% endswitch %}
  - path: /etc_master/adminrouter-listen.conf
    content: |
      listen 443 ssl default_server;
{% switch adminrouter_master_enforce_https %}
{% case "all" %}
      # Not serving HTTP as of adminrouter_master_enforce_https == "all"
{% case "only_root_path" %}
      listen 80 default_server;
      location = / {
          if ($scheme = http) {
              return 307 https://$host$request_uri;
          }
      }
{% case "none" %}
      listen 80 default_server;
{% endswitch %}
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      ssl_certificate /run/dcos/pki/tls/certs/adminrouter.crt;
      ssl_certificate_key /run/dcos/pki/tls/private/adminrouter.key;
      proxy_ssl_certificate /run/dcos/pki/tls/certs/adminrouter.crt;
      proxy_ssl_certificate_key /run/dcos/pki/tls/private/adminrouter.key;
{% endswitch %}
  - path: /etc_master/adminrouter-upstreams.conf
    content: |
      set $upstream_networking_api http://127.0.0.1:61430;
{% switch ssl_enabled %}
{% case "false" %}
      proxy_ssl_verify off;
      set $upstream_mesos http://leader.mesos:5050;
      set $upstream_marathon http://127.0.0.1:8080;
      set $upstream_secrets http://127.0.0.1:1337;
      set $upstream_cosmos http://127.0.0.1:7070;
{% case "true" %}
      proxy_ssl_trusted_certificate /run/dcos/pki/CA/certs/ca.crt;
      proxy_ssl_verify on;
      proxy_ssl_verify_depth 5;
      set $upstream_mesos https://leader.mesos:5050;
      set $upstream_marathon https://127.0.0.1:8443;
      set $upstream_secrets https://127.0.0.1:1337;
      set $upstream_cosmos https://127.0.0.1:7443;
{% endswitch %}
  - path: /etc_slave/adminrouter-upstreams.conf
    content: |
{% switch ssl_enabled %}
{% case "false" %}
      proxy_ssl_verify off;
      set $upstream_bouncer http://master.mesos;
{% case "true" %}
      proxy_ssl_trusted_certificate /run/dcos/pki/CA/certs/ca.crt;
      proxy_ssl_verify on;
      proxy_ssl_verify_depth 5;
      set $upstream_bouncer https://master.mesos;
{% endswitch %}
  - path: /etc_slave/adminrouter-listen.conf
    content: |
      listen 61002 ssl default_server;
{% switch adminrouter_agent_enforce_https %}
{% case "all" %}
      # Not serving HTTP as of adminrouter_agent_enforce_https == "all"
{% case "none" %}
      listen 61001 default_server;
{% endswitch %}
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      ssl_certificate /run/dcos/pki/tls/certs/adminrouter-agent.crt;
      ssl_certificate_key /run/dcos/pki/tls/private/adminrouter-agent.key;
      proxy_ssl_certificate /run/dcos/pki/tls/certs/adminrouter-agent.crt;
      proxy_ssl_certificate_key /run/dcos/pki/tls/private/adminrouter-agent.key;
{% endswitch %}
  - path: /etc_slave_public/adminrouter-upstreams.conf
    content: |
{% switch ssl_enabled %}
{% case "false" %}
      proxy_ssl_verify off;
      set $upstream_bouncer http://master.mesos;
{% case "true" %}
      proxy_ssl_trusted_certificate /run/dcos/pki/CA/certs/ca.crt;
      proxy_ssl_verify on;
      proxy_ssl_verify_depth 5;
      set $upstream_bouncer https://master.mesos;
{% endswitch %}
  - path: /etc_slave_public/adminrouter-listen.conf
    content: |
      listen 61002 ssl default_server;
{% switch adminrouter_agent_enforce_https %}
{% case "all" %}
      # Not serving HTTP as of adminrouter_agent_enforce_https == "all"
{% case "none" %}
      listen 61001 default_server;
{% endswitch %}
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      ssl_certificate /run/dcos/pki/tls/certs/adminrouter-agent.crt;
      ssl_certificate_key /run/dcos/pki/tls/private/adminrouter-agent.key;
      proxy_ssl_certificate /run/dcos/pki/tls/certs/adminrouter-agent.crt;
      proxy_ssl_certificate_key /run/dcos/pki/tls/private/adminrouter-agent.key;
{% endswitch %}
  - path: /etc/mesos-dns-extras.env
    content: |
      MESOS_DNS_CONFIG=/opt/mesosphere/etc/mesos-dns-enterprise.json
  - path: /etc/mesos-dns-enterprise.json
    content: |
      {
        "refreshSeconds": 30,
        "ttl": 60,
        "domain": "mesos",
        "port": 61053,
        {{ mesos_dns_resolvers_str }},
        "timeout": 5,
        "listener": "0.0.0.0",
        "email": "root.mesos-dns.mesos",
        "IPSources": {{ mesos_dns_ip_sources }},
        "HTTPListener": "127.0.0.1",
{% switch ssl_enabled %}
{% case "false" %}
        "MesosHTTPSOn": false,
{% case "true" %}
        "MesosHTTPSOn": true,
        "CACertFile": "/run/dcos/pki/CA/certs/ca.crt",
{% endswitch %}
{% switch mesos_authenticate_http %}
{% case "false" %}
{% case "true" %}
        "mesosAuthentication": "iam",
        "IAMConfigFile": "/run/dcos/etc/mesos-dns/iam.json",
{% endswitch %}
        "zk": "zk://127.0.0.1:2181/mesos"
      }
  - path: /etc/bouncer-config.json
    content: |
      {
        "SUPERUSER_PASSWORD_HASH": "{{ superuser_password_hash }}",
        "SUPERUSER_USERNAME": "{{ superuser_username }}",
        "LOG_LEVEL_STDERR": "INFO",
        "AUTH_COOKIE_SECURE_FLAG": {{ auth_cookie_secure_flag }},
        "EXPIRATION_AUTH_TOKEN_DAYS": {{ bouncer_expiration_auth_token_days }},
        "EXPIRATION_AUTH_COOKIE_DAYS": {{ bouncer_expiration_auth_token_days }},
        "EXPIRATION_INFO_COOKIE_DAYS": {{ bouncer_expiration_auth_token_days }},
        "DATASTORE_ZK_BACKEND_HOSTS": "127.0.0.1:2181",
        "GUNICORN_WORKER_PROCESSES": 1,
        "GUNICORN_THREADS_PER_WORKER": 10,
        "GUNICORN_BIND_ADDRESS": "127.0.0.1:8101",
        "GUNICORN_WORKER_TIMEOUT_SECONDS": 10
      }
  - path: /etc/dcos-secrets.env
    content: |
      SECRETS_BOOTSTRAP={{ bootstrap_secrets }}
{% switch ssl_enabled %}
{% case "false" %}
      TLS_ENABLED=false
{% case "true" %}
      TLS_ENABLED=true
      TLS_CERT_FILE=/run/dcos/pki/tls/certs/dcos-secrets.crt
      TLS_KEY_FILE=/run/dcos/pki/tls/private/dcos-secrets.key
      TLS_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
{% endswitch %}
  - path: /etc/dcos-vault.env
    content: |
{% switch ssl_enabled %}
{% case "false" %}
      TLS_ENABLED=false
{% case "true" %}
      TLS_ENABLED=true
{% endswitch %}
  - path: /etc_master/cosmos
    content: |
{% switch ssl_enabled %}
{% case "false" %}
      TLS_ENABLED=false
{% case "true" %}
      TLS_ENABLED=true
      TLS_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      TLS_CERT_FILE=/run/dcos/pki/tls/certs/cosmos.crt
      TLS_KEY_FILE=/run/dcos/pki/tls/private/cosmos.key
      TLS_TRUSTSTORE=/run/dcos/pki/CA/certs/cacerts.jks
{% endswitch %}
  - path: /etc/dcos-signal-extra.json
    content: |
      {
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
        "ca_cert_path": "/run/dcos/pki/CA/certs/ca.crt",
{% endswitch %}
        "customer_key": "{{ customer_key }}",
        "diagnostics_urls": [
{% switch ssl_enabled %}
{% case "false" %}
          "http://leader.mesos/system/health/v1/report?cache=0"
{% case "true" %}
          "https://leader.mesos/system/health/v1/report?cache=0"
{% endswitch %}
        ],
        "cosmos_urls": [
{% switch ssl_enabled %}
{% case "false" %}
          "http://leader.mesos/package/list"
{% case "true" %}
          "https://leader.mesos/package/list"
{% endswitch %}
        ],
        "mesos_urls": [
{% switch ssl_enabled %}
{% case "false" %}
          "http://leader.mesos/mesos/frameworks",
          "http://leader.mesos/mesos/metrics/snapshot"
{% case "true" %}
          "https://leader.mesos/mesos/frameworks",
          "https://leader.mesos/mesos/metrics/snapshot"
{% endswitch %}
        ]
      }
  - path: /etc_master/3dt_config.json
    content: |
        {
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
            "ca-cert": "/run/dcos/pki/CA/certs/ca.crt",
{% endswitch %}
            "pull": true,
            "diagnostics-bundle-dir": "/var/lib/dcos/3dt/diag-bundles",
            "endpoint-config": "/opt/mesosphere/etc/endpoints_config.json",
            "master-port": {{ adminrouter_master_port }},
            "agent-port": {{ adminrouter_agent_port }},
            "force-tls": {{ ssl_enabled }}
        }
  - path: /etc_slave/3dt_config.json
    content: |
        {
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
            "ca-cert": "/run/dcos/pki/CA/certs/ca.crt",
{% endswitch %}
            "endpoint-config": "/opt/mesosphere/etc/endpoints_config.json",
            "force-tls": {{ ssl_enabled }},
            "agent-port": {{ adminrouter_agent_port }}
        }
  - path: /etc_slave_public/3dt_config.json
    content: |
        {
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
            "ca-cert": "/run/dcos/pki/CA/certs/ca.crt",
{% endswitch %}
            "endpoint-config": "/opt/mesosphere/etc/endpoints_config.json",
            "force-tls": {{ ssl_enabled }},
            "agent-port": {{ adminrouter_agent_port }}
        }
  # TODO: Fix a copy of endpoints_config.json. We need a way to ship only 1 config for both open and enterprise DC/OS.
  #       If you add a new endpoint here, please make sure to add it to open DC/OS config as well.
  - path: /etc/endpoints_config.json
    content: |
        {
          "HTTPEndpoints": [
              {
                  "Port": 5050,
                  "Uri": "/__processes__",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/master/flags",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/master/frameworks",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/master/maintenance/schedule",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/master/maintenance/status",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/master/roles",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/master/slaves",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/master/state",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/master/state-summary",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/master/tasks",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/metrics/snapshot",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/registrar(1)/registry",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/system/stats.json",
                  "Role": ["master"]
              },
              {
                  "Port": 5050,
                  "Uri": "/version",
                  "Role": ["master"]
              },
              {
                  "Port": {{ marathon_port }},
                  "Uri": "/metrics",
                  "Role": ["master"]
              },
              {
                  "Port": {{ marathon_port }},
                  "Uri": "/v2/apps",
                  "Role": ["master"]
              },
              {
                  "Port": {{ marathon_port }},
                  "Uri": "/v2/deployments",
                  "Role": ["master"]
              },
              {
                  "Port": {{ marathon_port }},
                  "Uri": "/v2/eventSubscriptions",
                  "Role": ["master"]
              },
              {
                  "Port": {{ marathon_port }},
                  "Uri": "/v2/groups",
                  "Role": ["master"]
              },
              {
                  "Port": {{ marathon_port }},
                  "Uri": "/v2/info",
                  "Role": ["master"]
              },
              {
                  "Port": {{ marathon_port }},
                  "Uri": "/v2/leader",
                  "Role": ["master"]
              },
              {
                  "Port": {{ marathon_port }},
                  "Uri": "/v2/queue",
                  "Role": ["master"]
              },
              {
                  "Port": {{ marathon_port }},
                  "Uri": "/v2/tasks",
                  "Role": ["master"]
              },
              {
                  "Port": {{ adminrouter_master_port }},
                  "Uri": "/exhibitor/exhibitor/v1/cluster/list",
                  "Role": ["master"]
              },
              {
                  "Port": {{ adminrouter_master_port }},
                  "Uri": "/exhibitor/exhibitor/v1/cluster/log",
                  "Role": ["master"]
              },
              {
                  "Port": {{ adminrouter_master_port }},
                  "Uri": "/exhibitor/exhibitor/v1/cluster/state",
                  "Role": ["master"]
              },
              {
                  "Port": {{ adminrouter_master_port }},
                  "Uri": "/exhibitor/exhibitor/v1/cluster/status",
                  "Role": ["master"]
              },
              {
                  "Port": {{ adminrouter_master_port }},
                  "Uri": "/exhibitor/exhibitor/v1/config/get-state",
                  "Role": ["master"]
              },
              {
                  "Port": 5051,
                  "Uri": "/__processes__",
                  "Role":["agent", "agent_public"]
              },
              {
                  "Port": 5051,
                  "Uri": "/metrics/snapshot",
                  "Role":["agent", "agent_public"]
              },
              {
                  "Port": 5051,
                  "Uri": "/slave/flags",
                  "Role":["agent", "agent_public"]
              },
              {
                  "Port": 5051,
                  "Uri": "/slave/state",
                  "Role":["agent", "agent_public"]
              },
              {
                  "Port": 5051,
                  "Uri": "/system/stats.json",
                  "Role":["agent", "agent_public"]
              },
              {
                  "Port": {{ adminrouter_master_port }},
                  "Uri": "/mesos_dns/v1/config",
                  "Role": ["master"]
              },
              {
                  "Port": {{ adminrouter_master_port }},
                  "Uri": "/mesos_dns/v1/version",
                  "Role": ["master"]
              },
              {
                  "Port": {{ adminrouter_master_port }},
                  "Uri": "/dcos-history-service/history/last",
                  "Role": ["master"]
              },
              {
                  "Port": {{ adminrouter_master_port }},
                  "Uri": "/dcos-history-service/history/minute",
                  "Role": ["master"]
              },
              {
                  "Port": {{ adminrouter_master_port }},
                  "Uri": "/dcos-history-service/history/hour",
                  "Role": ["master"]
              }
          ],
          "LocalFiles": [
              {
                  "Location": "/opt/mesosphere/active.buildinfo.full.json"
              }
          ],
          "LocalCommands": [
              {
                  "Command": ["dmesg"]
              }
          ]
        }

  - path: /etc/minuteman.env
    content: |
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      MESOS_STATE_SSL_ENABLED=true
      ERLANG_DISTRIBUTION=inet_tls
      CLIENT_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      CLIENT_KEYFILE=/run/dcos/pki/tls/private/minuteman.key
      CLIENT_CERTFILE=/run/dcos/pki/tls/certs/minuteman.crt
      CLIENT_VERIFY=verify_peer
      SERVER_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      SERVER_KEYFILE=/run/dcos/pki/tls/private/minuteman.key
      SERVER_CERTFILE=/run/dcos/pki/tls/certs/minuteman.crt
      SERVER_VERIFY=verify_peer
      SERVER_FAIL_IF_NO_PEER_CERT=true
{% endswitch %}
  - path: /etc/navstar.env
    content: |
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      MESOS_STATE_SSL_ENABLED=true
      ERLANG_DISTRIBUTION=inet_tls
      CLIENT_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      CLIENT_KEYFILE=/run/dcos/pki/tls/private/navstar.key
      CLIENT_CERTFILE=/run/dcos/pki/tls/certs/navstar.crt
      CLIENT_VERIFY=verify_peer
      SERVER_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      SERVER_KEYFILE=/run/dcos/pki/tls/private/navstar.key
      SERVER_CERTFILE=/run/dcos/pki/tls/certs/navstar.crt
      SERVER_VERIFY=verify_peer
      SERVER_FAIL_IF_NO_PEER_CERT=true
{% endswitch %}
  - path: /etc_master/networking_api.env
    content: |
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      MESOS_STATE_SSL_ENABLED=true
      ERLANG_DISTRIBUTION=inet_tls
      CLIENT_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      CLIENT_KEYFILE=/run/dcos/pki/tls/private/networking_api.key
      CLIENT_CERTFILE=/run/dcos/pki/tls/certs/networking_api.crt
      CLIENT_VERIFY=verify_peer
      SERVER_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      SERVER_KEYFILE=/run/dcos/pki/tls/private/networking_api.key
      SERVER_CERTFILE=/run/dcos/pki/tls/certs/networking_api.crt
      SERVER_VERIFY=verify_peer
      SERVER_FAIL_IF_NO_PEER_CERT=true
{% endswitch %}
  - path: /etc/spartan.env
    content: |
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      MESOS_STATE_SSL_ENABLED=true
      ERLANG_DISTRIBUTION=inet_tls
      CLIENT_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      CLIENT_KEYFILE=/run/dcos/pki/tls/private/spartan.key
      CLIENT_CERTFILE=/run/dcos/pki/tls/certs/spartan.crt
      CLIENT_VERIFY=verify_peer
      SERVER_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      SERVER_KEYFILE=/run/dcos/pki/tls/private/spartan.key
      SERVER_CERTFILE=/run/dcos/pki/tls/certs/spartan.crt
      SERVER_VERIFY=verify_peer
      SERVER_FAIL_IF_NO_PEER_CERT=true
{% endswitch %}
{% switch firewall_enabled %}
{% case "true" %}
  - path: /etc/mesos/master_firewall.json
    content: |
      {
        "disabled_endpoints" : {
          "paths" : [
              "/slaves",
              "/profiler/start",
              "/profiler/stop",
              "/registrar(1)/registry",
              "/api/v1",
              "/api/v1/scheduler",
              "/maintenance/schedule",
              "/maintenance/status",
              "/machine/down",
              "/machine/up"
          ]
        }
      }
{% case "false" %}
{% endswitch %}
  - path: /etc/mesos-master-extras
    content: |
{% switch mesos_authenticate_http %}
{% case "true" %}
      MESOS_HTTP_AUTHENTICATORS={{ mesos_http_authenticators }}
      MESOS_AUTHENTICATE_HTTP_READWRITE={{ mesos_authenticate_http }}
      MESOS_AUTHENTICATE_HTTP_READONLY={{ mesos_authenticate_http }}
{% case "false" %}
{% endswitch %}
{% switch firewall_enabled %}
{% case "true" %}
      MESOS_FIREWALL_RULES=/opt/mesosphere/etc/mesos/master_firewall.json
{% case "false" %}
{% endswitch %}
      MESOS_AUTHORIZERS={{ mesos_master_authorizers }}
      MESOS_AUTHENTICATORS={{ mesos_classic_authenticator }}
      # Conditionally require authentication (reject unauthenticated).
      MESOS_AUTHENTICATE_FRAMEWORKS={{ framework_authentication_required }}
      MESOS_AUTHENTICATE_AGENTS={{ agent_authentication_required }}
      SSL_ENABLED={{ ssl_enabled }}
      SSL_SUPPORT_DOWNGRADE={{ ssl_support_downgrade }}
      SSL_VERIFY_CERT=false
      SSL_REQUIRE_CERT=false
      SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      SSL_CERT_FILE=/run/dcos/pki/tls/certs/mesos-master.crt
      SSL_KEY_FILE=/run/dcos/pki/tls/private/mesos-master.key
      DCOS_AUDIT_LOG={{ dcos_audit_logging }}
{% switch firewall_enabled %}
{% case "true" %}
  - path: /etc/mesos/slave_firewall.json
    content: |
      {
        "disabled_endpoints": {
          "paths": [
            "/profiler/start",
            "/profiler/stop",
            "/api/v1",
            "/api/v1/executor"
          ]
        }
      }
{% case "false" %}
{% endswitch %}
  - path: /etc_slave/mesos/slave_principal.json
    content: |
      { "principal": "dcos_mesos_agent" }
  - path: /etc_slave_public/mesos/slave_principal.json
    content: |
      { "principal": "dcos_mesos_agent_public" }
  - path: /etc/mesos-slave-common-extras
    content: |
      MESOS_ISOLATION={{ mesos_enterprise_isolation }}
      MESOS_HOOKS={{ mesos_hooks }}
      LIBPROCESS_SSL_ENABLED={{ ssl_enabled }}
      # TODO(adam-mesos): should be false in strict mode, but.. DCOS-8159
      LIBPROCESS_SSL_SUPPORT_DOWNGRADE=true
      LIBPROCESS_SSL_VERIFY_CERT=false
      LIBPROCESS_SSL_REQUIRE_CERT=false
      LIBPROCESS_SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      LIBPROCESS_SSL_CERT_FILE=/run/dcos/pki/tls/certs/mesos-slave.crt
      LIBPROCESS_SSL_KEY_FILE=/run/dcos/pki/tls/private/mesos-slave.key
{% switch mesos_authenticate_http %}
{% case "true" %}
      MESOS_HTTP_AUTHENTICATORS={{ mesos_http_authenticators }}
      MESOS_AUTHENTICATE_HTTP_READWRITE={{ mesos_authenticate_http }}
      MESOS_AUTHENTICATE_HTTP_READONLY={{ mesos_authenticate_http }}
{% case "false" %}
{% endswitch %}
{% switch firewall_enabled %}
{% case "true" %}
      MESOS_FIREWALL_RULES=/opt/mesosphere/etc/mesos/slave_firewall.json
{% case "false" %}
{% endswitch %}
      MESOS_AUTHORIZER={{ mesos_agent_authorizer }}
{% switch agent_authn_enabled %}
{% case "true" %}
      MESOS_AUTHENTICATEE=com_mesosphere_dcos_ClassicRPCAuthenticatee
      MESOS_CREDENTIAL=file:///opt/mesosphere/etc/mesos/slave_principal.json
      DCOS_SERVICE_ACCOUNT_CREDENTIAL=file:///run/dcos/etc/mesos/agent_service_account.json
{% case "false" %}
{% endswitch %}
      DCOS_AUDIT_LOG={{ dcos_audit_logging }}
  - path: /etc_master/marathon-extras
    content: |
      MESOS_USER={{ default_task_user }}
{% switch framework_authentication_enabled %}
{% case "true" %}
      DCOS_SERVICE_ACCOUNT_CREDENTIAL=file:///run/dcos/etc/marathon/service_account.json
      MESOS_AUTHENTICATEE=com_mesosphere_dcos_ClassicRPCAuthenticatee
      MESOS_MODULES=file:///opt/mesosphere/etc/mesos-scheduler-modules/dcos_authenticatee_module.json
      MESOS_FRAMEWORK_AUTHN=true
{% case "false" %}
      MESOS_FRAMEWORK_AUTHN=false
{% endswitch %}
      PLUGIN_FRAMEWORK_TYPE=marathon
{% switch ssl_enabled %}
{% case "false" %}
      PLUGIN_ACS_URL=http://127.0.0.1
{% case "true" %}
      PLUGIN_ACS_URL=https://127.0.0.1
      LIBPROCESS_SSL_ENABLED={{ ssl_enabled }}
      LIBPROCESS_SSL_SUPPORT_DOWNGRADE={{ ssl_support_downgrade }}
      LIBPROCESS_SSL_VERIFY_CERT=false
      LIBPROCESS_SSL_REQUIRE_CERT=false
      LIBPROCESS_SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      LIBPROCESS_SSL_CERT_FILE=/run/dcos/pki/tls/certs/marathon.crt
      LIBPROCESS_SSL_KEY_FILE=/run/dcos/pki/tls/private/marathon.key
{% endswitch %}
{% switch marathon_https_enabled %}
{% case "true" %}
      TLS_ENABLED=true
      SSL_KEYSTORE_PATH=/run/dcos/pki/tls/private/marathon.jks
      TLS_TRUSTSTORE=/run/dcos/pki/CA/certs/cacerts.jks
{% case "false" %}
      TLS_ENABLED=false
{% endswitch %}
      MARATHON_EXTRA_ARGS={{ marathon_extra_args }}
{% switch dcos_audit_logging %}
{% case "true" %}
{% case "false" %}
      DCOS_AUDIT_LOG_DISABLED=true
{% endswitch %}
  - path: /etc_master/metronome-extras
    content: |
      METRONOME_MESOS_USER={{ default_task_user }}
{% switch framework_authentication_enabled %}
{% case "true" %}
      METRONOME_MESOS_AUTHENTICATION_PRINCIPAL=dcos_metronome
      METRONOME_MESOS_AUTHENTICATION_SECRET_FILE=/run/dcos/etc/metronome/service_account.json
      DCOS_SERVICE_ACCOUNT_CREDENTIAL=file:///run/dcos/etc/metronome/service_account.json
      MESOS_AUTHENTICATEE=com_mesosphere_dcos_ClassicRPCAuthenticatee
      MESOS_MODULES=file:///opt/mesosphere/etc/mesos-scheduler-modules/dcos_authenticatee_module.json
{% case "false" %}
{% endswitch %}
      METRONOME_PLUGIN_CONF=/opt/mesosphere/active/metronome/usr/plugins/plugin-conf.json
      METRONOME_PLUGIN_DIR=/opt/mesosphere/active/metronome/usr/plugins/lib
      PLUGIN_FRAMEWORK_TYPE=metronome
{% switch security %}
{% case "disabled" %}
      METRONOME_PLAY_SERVER_HTTP_PORT=9090
{% case "permissive" %}
      METRONOME_PLAY_SERVER_HTTP_PORT=9090
      METRONOME_PLAY_SERVER_HTTPS_PORT=9443
{% case "strict" %}
      METRONOME_PLAY_SERVER_HTTP_PORT=disabled
      METRONOME_PLAY_SERVER_HTTPS_PORT=9443
{% endswitch %}
{% switch ssl_enabled %}
{% case "false" %}
      METRONOME_MESOS_LEADER_UI_URL=http://leader.mesos:5050
      PLUGIN_ACS_URL=http://127.0.0.1
      LIBPROCESS_SSL_ENABLED=false
{% case "true" %}
      METRONOME_PLAY_SERVER_HTTPS_KEYSTORE_PATH=/run/dcos/pki/tls/private/metronome.jks
      METRONOME_PLAY_SERVER_HTTPS_KEYSTORE_TYPE=JKS
      METRONOME_MESOS_LEADER_UI_URL=https://leader.mesos:5050
      PLUGIN_ACS_URL=https://127.0.0.1
      LIBPROCESS_SSL_ENABLED=true
      LIBPROCESS_SSL_SUPPORT_DOWNGRADE={{ ssl_support_downgrade }}
      LIBPROCESS_SSL_VERIFY_CERT=false
      LIBPROCESS_SSL_REQUIRE_CERT=false
      LIBPROCESS_SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      LIBPROCESS_SSL_CERT_FILE=/run/dcos/pki/tls/certs/metronome.crt
      LIBPROCESS_SSL_KEY_FILE=/run/dcos/pki/tls/private/metronome.key
      TLS_TRUSTSTORE=/run/dcos/pki/CA/certs/cacerts.jks
{% endswitch %}
{% switch dcos_audit_logging %}
{% case "true" %}
{% case "false" %}
      DCOS_AUDIT_LOG_DISABLED=true
{% endswitch %}
{% switch zk_acls_enabled %}
{% case "false" %}
{% case "true" %}
  - path: /etc_master/zk_super_credentials
    permissions: "0600"
    content: |
      {{ zk_super_credentials }}
  - path: /etc_master/zk_master_credentials
    permissions: "0600"
    content: |
      {{ zk_master_credentials }}
  - path: /etc_master/zk_agent_digest
    permissions: "0600"
    content: |
      {{ zk_agent_digest }}
  - path: /etc_slave/zk_agent_credentials
    permissions: "0600"
    content: |
      {{ zk_agent_credentials }}
  - path: /etc_slave_public/zk_agent_credentials
    permissions: "0600"
    content: |
      {{ zk_agent_credentials }}
{% switch exhibitor_storage_backend %}
{% case "agent_only_group_no_exhibitor" %}
{% case "aws_s3" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "shared_filesystem" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "static" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "zookeeper" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "azure" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% endswitch %}
{% endswitch %}
  - path: /etc/bootstrap-config.json
    content: |
      {
        "security": "{{ security }}",
        "ssl_enabled": {{ ssl_enabled }},
        "ssl_support_downgrade": {{ ssl_support_downgrade }},
        "adminrouter_master_enforce_https": "{{ adminrouter_master_enforce_https }}",
        "adminrouter_agent_enforce_https": "{{ adminrouter_agent_enforce_https }}",
        "adminrouter_master_default_scheme": "{{ adminrouter_master_default_scheme }}",
        "exhibitor_admin_password_enabled": {{ exhibitor_admin_password_enabled }},
        "exhibitor_admin_password": "{{ exhibitor_admin_password }}",
        "firewall_enabled": {{ firewall_enabled }},
        "mesos_authenticate_http": {{ mesos_authenticate_http }},
        "mesos_authz_enforced": {{ mesos_authz_enforced }},
        "framework_authentication_required": {{ framework_authentication_required }},
        "agent_authentication_required": {{ agent_authentication_required }},
        "framework_authentication_enabled": {{ framework_authentication_enabled }},
        "agent_authn_enabled": {{ agent_authn_enabled }},
        "marathon_https_enabled": {{ marathon_https_enabled }},
        "marathon_extra_args": "{{ marathon_extra_args }}",
        "zk_acls_enabled": {{ zk_acls_enabled }}
      }
  - path: /etc_master/dcos-history-extras.env
    content: |
{% switch ssl_enabled %}
{% case "true" %}
      STATE_SUMMARY_URI=https://leader.mesos/mesos/state-summary
      TLS_VERIFY=/run/dcos/pki/CA/certs/ca.crt
{% case "false" %}
      STATE_SUMMARY_URI=http://leader.mesos/mesos/state-summary
{% endswitch %}
  - path: /etc/mesos-slave-modules/agent_dcos_security_modules.json
    content: |
      {
        "libraries": [
          {
            "file": "/opt/mesosphere/lib/mesos/libdcos_security.so",
            "modules": [
              {
                "name": "com_mesosphere_dcos_http_Authenticator",
                "parameters": [
                  {
                    "key": "host",
                    "value": "agent"
                  },
                  {
                    "key": "iam",
{% switch ssl_enabled %}
{% case "false" %}
                    "value": "http://master.mesos"
{% case "true" %}
                    "value": "https://master.mesos:443"
{% endswitch %}
                  }
                ]
              },
              {
                "name": "com_mesosphere_dcos_Authorizer",
                "parameters": [
                  {
                    "key": "host",
                    "value": "agent"
                  },
                  {
                    "key": "iam",
{% switch ssl_enabled %}
{% case "false" %}
                    "value": "http://master.mesos"
{% case "true" %}
                    "value": "https://master.mesos:443"
{% endswitch %}
                  },
                  {
                    "key": "cache_timeout",
                    "value": "5secs"
                  },
                  {
                    "key": "service_account_credential",
                    "value": "file:///run/dcos/etc/mesos/agent_service_account.json"
                  },
                  {
                    "key": "dcos_space_label",
                    "value": "DCOS_SPACE"
                  }
                ]
              },
              {
                "name": "com_mesosphere_dcos_SecretsIsolator",
                "parameters": [

                  {
                    "key": "store_url",
{% switch ssl_enabled %}
{% case "false" %}
                    "value": "http://master.mesos/secrets/v1"
{% case "true" %}
                    "value": "https://master.mesos/secrets/v1"
{% endswitch %}
                  },
                  {
                    "key": "service_account_credential",
                    "value": "file:///run/dcos/etc/mesos/agent_service_account.json"
                  },
                  {
                    "key": "special_secret_protobuf_label",
                    "value": "DCOS_SECRETS_DIRECTIVE"
                  },
                  {
                    "key": "special_secret_space_label",
                    "value": "DCOS_SPACE"
                  },
                  {
                    "key": "network_timeout",
                    "value": "5secs"
                  }
                ]
              },
              {
                "name": "com_mesosphere_dcos_SecretsHook",
                "parameters": [

                  {
                    "key": "store_url",
{% switch ssl_enabled %}
{% case "false" %}
                    "value": "http://master.mesos/secrets/v1"
{% case "true" %}
                    "value": "https://master.mesos/secrets/v1"
{% endswitch %}
                  },
                  {
                    "key": "service_account_credential",
                    "value": "file:///run/dcos/etc/mesos/agent_service_account.json"
                  },
                  {
                    "key": "special_secret_protobuf_label",
                    "value": "DCOS_SECRETS_DIRECTIVE"
                  },
                  {
                    "key": "special_secret_space_label",
                    "value": "DCOS_SPACE"
                  },
                  {
                    "key": "network_timeout",
                    "value": "5secs"
                  }
                ]
              },
              {
                "name": "com_mesosphere_dcos_ClassicRPCAuthenticatee"
              }
            ]
          }
        ]
      }
{% switch exhibitor_admin_password_enabled %}
{% case "true" %}
  - path: /etc_master/exhibitor_web.xml
    permissions: "0644"
    content: |
      <?xml version="1.0" encoding="UTF-8"?>
      <web-app xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
        version="2.5">
        <security-constraint>
          <web-resource-collection>
            <web-resource-name>Protected</web-resource-name>
            <url-pattern>/*</url-pattern>
          </web-resource-collection>
          <auth-constraint>
            <role-name>admin</role-name>
          </auth-constraint>
        </security-constraint>
        <security-constraint>
          <web-resource-collection>
            <web-resource-name>Public</web-resource-name>
            <url-pattern>/exhibitor/v1/cluster/status</url-pattern>
          </web-resource-collection>
        </security-constraint>
        <security-role>
          <role-name>admin</role-name>
        </security-role>
        <login-config>
          <auth-method>BASIC</auth-method>
          <realm-name>DCOS</realm-name>
        </login-config>
      </web-app>
  - path: /etc_master/exhibitor_realm
    permissions: "0644"
    content: |
      admin: {{ exhibitor_admin_password }},admin
{% case "false" %}
{% endswitch %}
