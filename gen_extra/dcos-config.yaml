package:
  - path: /etc/adminrouter-extras.env
    content: |
      ADMINROUTER_ACTIVATE_AUTH_MODULE=true
      DEFAULT_SCHEME={{ adminrouter_master_default_scheme }}
  - path: /etc_master/adminrouter-redirect-http-https.conf
    content: |
{% switch adminrouter_master_enforce_https %}
{% case "all" %}
      server {
         listen 80;
         # Redirecting all HTTP requests to HTTPS as of
         # adminrouter_master_enforce_https == "all"
         return 307 https://$host$request_uri;
      }
{% case "none" %}
{% case "only_root_path" %}
{% endswitch %}
  - path: /etc_master/adminrouter-listen.conf
    content: |
      listen 443 ssl default_server;
{% switch adminrouter_master_enforce_https %}
{% case "all" %}
      # Not serving HTTP as of adminrouter_master_enforce_https == "all"
{% case "only_root_path" %}
      listen 80 default_server;
      location = / {
          if ($scheme = http) {
              return 307 https://$host$request_uri;
          }
      }
{% case "none" %}
      listen 80 default_server;
{% endswitch %}
  - path: /etc_slave/adminrouter-listen.conf
    content: |
      listen 61002 ssl default_server;
{% switch adminrouter_agent_enforce_https %}
{% case "all" %}
     # Not serving HTTP as of adminrouter_agent_enforce_https == "all"
{% case "none" %}
      listen 61001 default_server;
{% endswitch %}
  - path: /etc_slave_public/adminrouter-listen.conf
    content: |
      listen 61002 ssl default_server;
{% switch adminrouter_agent_enforce_https %}
{% case "all" %}
     # Not serving HTTP as of adminrouter_agent_enforce_https == "all"
{% case "none" %}
      listen 61001 default_server;
{% endswitch %}
  - path: /etc/mesos-dns-extras.env
    content: |
      MESOS_DNS_CONFIG=/opt/mesosphere/etc/mesos-dns-enterprise.json
  - path: /etc/mesos-dns-enterprise.json
    content: |
      {
        "zk": "zk://127.0.0.1:2181/mesos",
        "refreshSeconds": 30,
        "ttl": 60,
        "domain": "mesos",
        "port": 61053,
        {{ mesos_dns_resolvers_str }},
        "timeout": 5,
        "listener": "0.0.0.0",
        "email": "root.mesos-dns.mesos",
        "IPSources": {{ mesos_dns_ip_sources }},
        "HTTPListener": "127.0.0.1",
        "MesosHTTPSOn": true,
        "CACertFile": "/run/dcos/pki/CA/certs/ca.crt",
        "mesosAuthentication": "iam",
        "IAMConfigFile": "/run/dcos/etc/mesos-dns/iam.json"
      }
  - path: /etc/bouncer-config.json
    content: |
      {
        "SUPERUSER_PASSWORD_HASH": "{{ superuser_password_hash }}",
        "SUPERUSER_USERNAME": "{{ superuser_username }}",
        "LOG_LEVEL_STDERR": "INFO",
        "AUTH_COOKIE_SECURE_FLAG": {{ auth_cookie_secure_flag }},
        "EXPIRATION_AUTH_TOKEN_DAYS": {{ bouncer_expiration_auth_token_days }},
        "EXPIRATION_AUTH_COOKIE_DAYS": {{ bouncer_expiration_auth_token_days }},
        "EXPIRATION_INFO_COOKIE_DAYS": {{ bouncer_expiration_auth_token_days }},
        "DATASTORE_ZK_BACKEND_HOSTS": "127.0.0.1:2181",
        "GUNICORN_WORKER_PROCESSES": 1,
        "GUNICORN_THREADS_PER_WORKER": 10,
        "GUNICORN_BIND_ADDRESS": "127.0.0.1:8101",
        "GUNICORN_WORKER_TIMEOUT_SECONDS": 10
      }
  - path: /etc/dcos-secrets.env
    content: |
      TLS_ENABLED=true
      SECRETS_BOOTSTRAP={{ bootstrap_secrets }}
      TLS_CERT_FILE=/run/dcos/pki/tls/certs/dcos-secrets.crt
      TLS_KEY_FILE=/run/dcos/pki/tls/private/dcos-secrets.key
      TLS_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
  - path: /etc_master/cosmos
    content: |
      TLS_ENABLED=true
      TLS_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      TLS_CERT_FILE=/run/dcos/pki/tls/certs/cosmos.crt
      TLS_KEY_FILE=/run/dcos/pki/tls/private/cosmos.key
      TLS_TRUSTSTORE=/run/dcos/pki/CA/certs/cacerts.jks
  - path: /etc/dcos-signal-extra.json
    content: |
      {
        "customer_key": "{{ customer_key }}",
        "diagnostics_urls": [
          "https://leader.mesos/system/health/v1/report?cache=0"
        ],
        "cosmos_urls": [
          "https://leader.mesos/package/list"
        ],
        "mesos_urls": [
          "https://leader.mesos/mesos/frameworks",
          "https://leader.mesos/mesos/metrics/snapshot"
        ],
{% switch security %}
{% case "disabled" %}
        "ca_cert_path": "",
{% case "permissive" %}
        "ca_cert_path": "/run/dcos/pki/CA/certs/ca.crt"
{% case "strict" %}
        "ca_cert_path": "/run/dcos/pki/CA/certs/ca.crt"
{% endswitch %}
      }
  - path: /etc/minuteman.env
    content: |
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      MESOS_STATE_SSL_ENABLED=true
      ERLANG_DISTRIBUTION=inet_tls
      CLIENT_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      CLIENT_KEYFILE=/run/dcos/pki/tls/private/minuteman.key
      CLIENT_CERTFILE=/run/dcos/pki/tls/certs/minuteman.crt
      CLIENT_VERIFY=verify_peer
      SERVER_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      SERVER_KEYFILE=/run/dcos/pki/tls/private/minuteman.key
      SERVER_CERTFILE=/run/dcos/pki/tls/certs/minuteman.crt
      SERVER_VERIFY=verify_peer
      SERVER_FAIL_IF_NO_PEER_CERT=true
{% endswitch %}
  - path: /etc/navstar.env
    content: |
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      MESOS_STATE_SSL_ENABLED=true
      ERLANG_DISTRIBUTION=inet_tls
      CLIENT_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      CLIENT_KEYFILE=/run/dcos/pki/tls/private/navstar.key
      CLIENT_CERTFILE=/run/dcos/pki/tls/certs/navstar.crt
      CLIENT_VERIFY=verify_peer
      SERVER_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      SERVER_KEYFILE=/run/dcos/pki/tls/private/navstar.key
      SERVER_CERTFILE=/run/dcos/pki/tls/certs/navstar.crt
      SERVER_VERIFY=verify_peer
      SERVER_FAIL_IF_NO_PEER_CERT=true
{% endswitch %}
  - path: /etc_master/networking_api.env
    content: |
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      MESOS_STATE_SSL_ENABLED=true
      ERLANG_DISTRIBUTION=inet_tls
      CLIENT_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      CLIENT_KEYFILE=/run/dcos/pki/tls/private/networking_api.key
      CLIENT_CERTFILE=/run/dcos/pki/tls/certs/networking_api.crt
      CLIENT_VERIFY=verify_peer
      SERVER_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      SERVER_KEYFILE=/run/dcos/pki/tls/private/networking_api.key
      SERVER_CERTFILE=/run/dcos/pki/tls/certs/networking_api.crt
      SERVER_VERIFY=verify_peer
      SERVER_FAIL_IF_NO_PEER_CERT=true
{% endswitch %}
  - path: /etc/spartan.env
    content: |
{% switch ssl_enabled %}
{% case "false" %}
{% case "true" %}
      MESOS_STATE_SSL_ENABLED=true
      ERLANG_DISTRIBUTION=inet_tls
      CLIENT_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      CLIENT_KEYFILE=/run/dcos/pki/tls/private/spartan.key
      CLIENT_CERTFILE=/run/dcos/pki/tls/certs/spartan.crt
      CLIENT_VERIFY=verify_peer
      SERVER_CACERTFILE=/run/dcos/pki/CA/certs/ca.crt
      SERVER_KEYFILE=/run/dcos/pki/tls/private/spartan.key
      SERVER_CERTFILE=/run/dcos/pki/tls/certs/spartan.crt
      SERVER_VERIFY=verify_peer
      SERVER_FAIL_IF_NO_PEER_CERT=true
{% endswitch %}
{% switch firewall_enabled %}
{% case "true" %}
  - path: /etc/mesos/master_firewall.json
    content: |
      {
        "disabled_endpoints" : {
          "paths" : [
              "/slaves",
              "/profiler/start",
              "/profiler/stop",
              "/registrar(1)/registry",
              "/api/v1",
              "/api/v1/scheduler",
              "/maintenance/schedule",
              "/maintenance/status",
              "/machine/down",
              "/machine/up"
          ]
        }
      }
{% case "false" %}
{% endswitch %}
  - path: /etc/mesos-master-extras
    content: |
{% switch mesos_authenticate_http %}
{% case "true" %}
      MESOS_HTTP_AUTHENTICATORS={{ mesos_http_authenticators }}
      MESOS_AUTHENTICATE_HTTP_READWRITE={{ mesos_authenticate_http }}
      MESOS_AUTHENTICATE_HTTP_READONLY={{ mesos_authenticate_http }}
{% case "false" %}
{% endswitch %}
{% switch firewall_enabled %}
{% case "true" %}
      MESOS_FIREWALL_RULES=/opt/mesosphere/etc/mesos/master_firewall.json
{% case "false" %}
{% endswitch %}
      MESOS_AUTHORIZERS={{ mesos_master_authorizers }}
      # Always load authenticator, allow authentication.
      MESOS_AUTHENTICATORS={{ mesos_classic_authenticator }}
      # Conditionally require authentication (reject unauthenticated).
      MESOS_AUTHENTICATE_FRAMEWORKS={{ mesos_authenticate_frameworks }}
      MESOS_AUTHENTICATE_AGENTS={{ mesos_authenticate_agents }}
      SSL_ENABLED={{ ssl_enabled }}
      SSL_SUPPORT_DOWNGRADE={{ ssl_support_downgrade }}
      SSL_VERIFY_CERT=false
      SSL_REQUIRE_CERT=false
      SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      SSL_CERT_FILE=/run/dcos/pki/tls/certs/mesos-master.crt
      SSL_KEY_FILE=/run/dcos/pki/tls/private/mesos-master.key
      DCOS_AUDIT_LOG={{ dcos_audit_logging }}
{% switch firewall_enabled %}
{% case "true" %}
  - path: /etc/mesos/slave_firewall.json
    content: |
      {
        "disabled_endpoints": {
          "paths": [
            "/profiler/start",
            "/profiler/stop",
            "/api/v1",
            "/api/v1/executor"
          ]
        }
      }
{% case "false" %}
{% endswitch %}
  - path: /etc_slave/mesos/slave_principal.json
    content: |
      { "principal": "dcos_mesos_agent" }
  - path: /etc_slave_public/mesos/slave_principal.json
    content: |
      { "principal": "dcos_mesos_agent_public" }
  - path: /etc/mesos-slave-common-extras
    content: |
      MESOS_ISOLATION={{ mesos_enterprise_isolation }}
      MESOS_HOOKS={{ mesos_hooks }}
      LIBPROCESS_SSL_ENABLED={{ ssl_enabled }}
      # TODO(adam-mesos): should be false in strict mode, but.. DCOS-8159
      LIBPROCESS_SSL_SUPPORT_DOWNGRADE=true
      LIBPROCESS_SSL_VERIFY_CERT=false
      LIBPROCESS_SSL_REQUIRE_CERT=false
      LIBPROCESS_SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      LIBPROCESS_SSL_CERT_FILE=/run/dcos/pki/tls/certs/mesos-slave.crt
      LIBPROCESS_SSL_KEY_FILE=/run/dcos/pki/tls/private/mesos-slave.key
{% switch mesos_authenticate_http %}
{% case "true" %}
      MESOS_HTTP_AUTHENTICATORS={{ mesos_http_authenticators }}
      MESOS_AUTHENTICATE_HTTP_READWRITE={{ mesos_authenticate_http }}
      MESOS_AUTHENTICATE_HTTP_READONLY={{ mesos_authenticate_http }}
{% case "false" %}
{% endswitch %}
{% switch firewall_enabled %}
{% case "true" %}
      MESOS_FIREWALL_RULES=/opt/mesosphere/etc/mesos/slave_firewall.json
{% case "false" %}
{% endswitch %}
      MESOS_AUTHORIZER={{ mesos_agent_authorizer }}
{% switch agent_authn_enabled %}
{% case "true" %}
      MESOS_AUTHENTICATEE=com_mesosphere_dcos_ClassicRPCAuthenticatee
      MESOS_CREDENTIAL=file:///opt/mesosphere/etc/mesos/slave_principal.json
      DCOS_SERVICE_ACCOUNT_CREDENTIAL=file:///run/dcos/etc/mesos/agent_service_account.json
{% case "false" %}
{% endswitch %}
      DCOS_AUDIT_LOG={{ dcos_audit_logging }}
  - path: /etc_master/marathon-extras
    content: |
      DCOS_SERVICE_ACCOUNT_CREDENTIAL=file:///run/dcos/etc/marathon/service_account.json
      MESOS_AUTHENTICATEE=com_mesosphere_dcos_ClassicRPCAuthenticatee
      MESOS_MODULES=file:///opt/mesosphere/etc/mesos-scheduler-modules/dcos_authenticatee_module.json
      MESOS_USER={{ default_task_user }}
      PLUGIN_ACS_URL=https://127.0.0.1
      PLUGIN_FRAMEWORK_TYPE=marathon
      LIBPROCESS_SSL_ENABLED={{ ssl_enabled }}
      LIBPROCESS_SSL_SUPPORT_DOWNGRADE={{ ssl_support_downgrade }}
      LIBPROCESS_SSL_VERIFY_CERT=false
      LIBPROCESS_SSL_REQUIRE_CERT=false
      LIBPROCESS_SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      LIBPROCESS_SSL_CERT_FILE=/run/dcos/pki/tls/certs/marathon.crt
      LIBPROCESS_SSL_KEY_FILE=/run/dcos/pki/tls/private/marathon.key
      SSL_KEYSTORE_PATH=/run/dcos/pki/tls/private/marathon.jks
      TLS_TRUSTSTORE=/run/dcos/pki/CA/certs/cacerts.jks
      MARATHON_EXTRA_ARGS={{ marathon_extra_args }}
{% switch dcos_audit_logging %}
{% case "true" %}
{% case "false" %}
      DCOS_AUDIT_LOG_DISABLED=true
{% endswitch %}
  - path: /etc_master/metronome-extras
    content: |
      DCOS_SERVICE_ACCOUNT_CREDENTIAL=file:///run/dcos/etc/metronome/service_account.json
      MESOS_AUTHENTICATEE=com_mesosphere_dcos_ClassicRPCAuthenticatee
      MESOS_MODULES=file:///opt/mesosphere/etc/mesos-scheduler-modules/dcos_authenticatee_module.json
      METRONOME_MESOS_USER={{ default_task_user }}
      METRONOME_MESOS_AUTHENTICATION_PRINCIPAL=dcos_metronome
      METRONOME_MESOS_AUTHENTICATION_SECRET_FILE=/run/dcos/etc/metronome/service_account.json
      METRONOME_MESOS_LEADER_UI_URL=https://leader.mesos:5050
      METRONOME_PLAY_SERVER_HTTP_PORT=disabled
      METRONOME_PLAY_SERVER_HTTPS_KEYSTORE_PATH=/run/dcos/pki/tls/private/metronome.jks
      METRONOME_PLAY_SERVER_HTTPS_KEYSTORE_TYPE=JKS
      METRONOME_PLAY_SERVER_HTTPS_PORT=9443
      METRONOME_PLUGIN_CONF=/opt/mesosphere/active/metronome/usr/plugins/plugin-conf.json
      METRONOME_PLUGIN_DIR=/opt/mesosphere/active/metronome/usr/plugins/lib
      PLUGIN_ACS_URL=https://127.0.0.1
      PLUGIN_FRAMEWORK_TYPE=metronome
      LIBPROCESS_SSL_ENABLED={{ ssl_enabled }}
      LIBPROCESS_SSL_SUPPORT_DOWNGRADE={{ ssl_support_downgrade }}
      LIBPROCESS_SSL_VERIFY_CERT=false
      LIBPROCESS_SSL_REQUIRE_CERT=false
      LIBPROCESS_SSL_CA_FILE=/run/dcos/pki/CA/certs/ca.crt
      LIBPROCESS_SSL_CERT_FILE=/run/dcos/pki/tls/certs/metronome.crt
      LIBPROCESS_SSL_KEY_FILE=/run/dcos/pki/tls/private/metronome.key
      TLS_TRUSTSTORE=/run/dcos/pki/CA/certs/cacerts.jks
{% switch dcos_audit_logging %}
{% case "true" %}
{% case "false" %}
      DCOS_AUDIT_LOG_DISABLED=true
{% endswitch %}
{% switch zk_acls_enabled %}
{% case "false" %}
{% case "true" %}
  - path: /etc_master/zk_super_credentials
    permissions: "0600"
    content: |
      {{ zk_super_credentials }}
  - path: /etc_master/zk_master_credentials
    permissions: "0600"
    content: |
      {{ zk_master_credentials }}
  - path: /etc_master/zk_agent_digest
    permissions: "0600"
    content: |
      {{ zk_agent_digest }}
  - path: /etc_slave/zk_agent_credentials
    permissions: "0600"
    content: |
      {{ zk_agent_credentials }}
  - path: /etc_slave_public/zk_agent_credentials
    permissions: "0600"
    content: |
      {{ zk_agent_credentials }}
{% switch exhibitor_storage_backend %}
{% case "agent_only_group_no_exhibitor" %}
{% case "aws_s3" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "shared_filesystem" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "static" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "zookeeper" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% case "azure" %}
  - path: /etc/exhibitor-extras
    content: |
      {{ zk_super_digest_jvmflags }}
{% endswitch %}
{% endswitch %}
  - path: /etc/bootstrap-config.json
    content: |
      {
        "security": "{{ security }}",
        "ssl_enabled": {{ ssl_enabled }},
        "ssl_support_downgrade": {{ ssl_support_downgrade }},
        "adminrouter_master_enforce_https": {{ adminrouter_master_enforce_https }},
        "adminrouter_agent_enforce_https": {{ adminrouter_agent_enforce_https }},
        "adminrouter_master_default_scheme": {{ adminrouter_master_default_scheme }},
        "firewall_enabled": {{ firewall_enabled }},
        "mesos_authenticate_http": {{ mesos_authenticate_http }},
        "mesos_authz_enforced": {{ mesos_authz_enforced }},
        "mesos_authenticate_frameworks": {{ mesos_authenticate_frameworks }},
        "mesos_authenticate_agents": {{ mesos_authenticate_agents }},
        "agent_authn_enabled": {{ agent_authn_enabled }},
        "marathon_extra_args": "{{ marathon_extra_args }}",
        "zk_acls_enabled": {{ zk_acls_enabled }}
      }
